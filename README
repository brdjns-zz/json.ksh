json.ksh
========

json.ksh is a JSON parser written in KornShell, extended from JSON.sh.
It differs from the former in that it uses idiomatic KornShell.  This
makes it fundamentally incompatible with the original Bourne shell, and
barely compatible with the POSIX shell.


Installation
------------

Clone the source and place it into your software project's source tree.


Usage
-----

Operation is identical to JSON.sh.  One pipes JSON to it.  It traverses
the JSON objects, printing out the path to the current object as a JSON
array, followed by the object, without whitespace.

A simple example:

  $ json_parse < package.json
  ["name"]  "json.ksh"
  ["version"]  "0.0.0"
  ["description"]  ""
  ["homepage"]  "https://github.com/brdjns/json.ksh"
  ["repository","type"]  "git"
  ["repository","url"]  "https://github.com/brdjns/json.ksh.git"
  ["repository"]  {"type":"git","url":"https://github.com/brdjns/json.ksh.git"}
  ["bin","json_parse"]  "./json.ksh"
  ["bin"]  {"json_parse":"./json.ksh"}
  ["dependencies"]  {}

A more complex example:

  curl registry.npmjs.org/express | ./json.ksh \
       | egrep '\["versions","[^"]*"\]'


Options
-------

  -b   brief output: combine 'leaf only' and 'prune empty' options

  -l   leaf only: only show leaf nodes, which stops data duplication

  -p   prune empty exclude fields with empty values
  
  -n   no-head: do not show nodes that have no path; normally these
       output a leading '[]', which you cannot use in a ksh array

  -s   solidus: do not escape the solidus ('/')

  -h   show usage


See also
--------
  
  *  JSON.sh ported to AWK <https://github.com/step-/JSON.awk>
  *  a BASH implementation <https://github.com/archan937/jsonv.sh>
  *  JSONPath based on JSON.sh <https://github.com/mclarkson/JSONPath.sh>


Copying
-------

json.ksh distributed under the MIT and Apache 2.0 licences, and comes
with absolutely no warranty, express or implied.  Use it at your own
risk.
